{"ast":null,"code":"var _jsxFileName = \"/home/pravesh/Desktop/Scratch/src/components/looks/ThinkWithTimer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ThinkWithTimer = ({\n  character,\n  comp_id\n}) => {\n  _s();\n\n  const [state, setState] = useState({\n    show_msg: false,\n    timer_message: \"\",\n    timer_for_msg: 0\n  });\n  /* Display Think Message with Timer */\n\n  const displayMessage = () => {\n    const el = document.getElementById(`${character.active}-message-box`);\n    const el2 = document.getElementById(`${character.active}-message-box1`);\n\n    if (state.show_msg && state.character_id === character.active) {\n      setState({ ...state,\n        show_msg: false\n      });\n      el.style.display = \"none\";\n      el2.style.display = \"none\";\n      return;\n    }\n\n    setState({ ...state,\n      show_msg: true\n    });\n    el.style.display = \"inline-block\";\n    el.style.position = \"relative\";\n    el2.style.display = \"block\";\n    el2.style.position = \"relative\";\n    el.innerHTML = state.timer_message;\n    window.setTimeout(() => {\n      setState({ ...state,\n        show_msg: false\n      });\n      el.style.display = \"none\";\n      el2.style.display = \"none\";\n    }, state.timer_for_msg * 1000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rounded text-center bg-purple-700 p-2 my-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 my-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-white\",\n          children: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"mx-2 p-1 py-0 text-center\",\n          type: \"text\",\n          value: state.timer_message,\n          onChange: e => {\n            e.target.value.length > 0 && setState({ ...state,\n              timer_message: e.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 my-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-white\",\n          children: \"Timer:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"mx-2 p-1 py-0 text-center\",\n          type: \"number\",\n          value: state.timer_for_msg,\n          onChange: e => {\n            parseInt(e.target.value) > 0 && setState({ ...state,\n              timer_for_msg: parseInt(e.target.value)\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: comp_id,\n        className: \"flex flex-row flex-wrap text-center bg-purple-900 text-white px-2 py-1 my-2 text-sm cursor-pointer\",\n        onClick: () => displayMessage(),\n        children: `Think ${state.timer_message}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}; // mapping state to component\n\n\n_s(ThinkWithTimer, \"zUyuv/qU8+fkVt1ho9r/0p+0gHI=\");\n\n_c = ThinkWithTimer;\n\nconst mapStateToProps = state => {\n  return {\n    character: state.character\n  };\n};\n\nexport default connect(mapStateToProps)(ThinkWithTimer);\n\nvar _c;\n\n$RefreshReg$(_c, \"ThinkWithTimer\");","map":{"version":3,"sources":["/home/pravesh/Desktop/Scratch/src/components/looks/ThinkWithTimer.js"],"names":["React","useState","connect","Paper","ThinkWithTimer","character","comp_id","state","setState","show_msg","timer_message","timer_for_msg","displayMessage","el","document","getElementById","active","el2","character_id","style","display","position","innerHTML","window","setTimeout","e","target","value","length","parseInt","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst ThinkWithTimer = ({ character, comp_id }) => {\n  const [state, setState] = useState({\n    show_msg: false,\n    timer_message: \"\",\n    timer_for_msg: 0,\n  });\n  /* Display Think Message with Timer */\n  const displayMessage = () => {\n    const el = document.getElementById(`${character.active}-message-box`);\n    const el2 = document.getElementById(`${character.active}-message-box1`);\n    if (state.show_msg && state.character_id === character.active) {\n      setState({ ...state, show_msg: false });\n      el.style.display = \"none\";\n      el2.style.display = \"none\";\n      return;\n    }\n    setState({ ...state, show_msg: true });\n    el.style.display = \"inline-block\";\n    el.style.position = \"relative\";\n\n    el2.style.display = \"block\";\n    el2.style.position = \"relative\";\n\n    el.innerHTML = state.timer_message;\n    window.setTimeout(() => {\n      setState({ ...state, show_msg: false });\n      el.style.display = \"none\";\n      el2.style.display = \"none\";\n    }, state.timer_for_msg * 1000);\n  };\n\n  return (\n    <Paper elevation={3}>\n      <div className=\"rounded text-center bg-purple-700 p-2 my-3\">\n        <div className=\"grid grid-cols-2 my-2\">\n          <div className=\"text-white\">Message</div>\n          <input\n            className=\"mx-2 p-1 py-0 text-center\"\n            type=\"text\"\n            value={state.timer_message}\n            onChange={(e) => {\n              e.target.value.length > 0 &&\n                setState({ ...state, timer_message: e.target.value });\n            }}\n          />\n        </div>\n        <div className=\"grid grid-cols-2 my-2\">\n          <div className=\"text-white\">Timer:</div>\n          <input\n            className=\"mx-2 p-1 py-0 text-center\"\n            type=\"number\"\n            value={state.timer_for_msg}\n            onChange={(e) => {\n              parseInt(e.target.value) > 0 &&\n                setState({ ...state, timer_for_msg: parseInt(e.target.value) });\n            }}\n          />\n        </div>\n        <div\n          id={comp_id}\n          className=\"flex flex-row flex-wrap text-center bg-purple-900 text-white px-2 py-1 my-2 text-sm cursor-pointer\"\n          onClick={() => displayMessage()}\n        >\n          {`Think ${state.timer_message}`}\n        </div>\n      </div>\n    </Paper>\n  );\n};\n\n// mapping state to component\nconst mapStateToProps = (state) => {\n  return {\n    character: state.character,\n  };\n};\n\nexport default connect(mapStateToProps)(ThinkWithTimer);\n"]},"metadata":{},"sourceType":"module"}