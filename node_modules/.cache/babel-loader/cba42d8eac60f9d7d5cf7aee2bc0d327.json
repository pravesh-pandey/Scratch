{"ast":null,"code":"import { SET_ACTIVE_CHARACTER, ADD_CHARACTER, SET_ANGLE } from \"./actionTypes\";\nconst initialState = {\n  characters: [{\n    id: \"sprite0\",\n    angle: 0\n  }],\n  active: \"sprite0\"\n};\nexport const characterReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_CHARACTER:\n      return { ...state,\n        active: action.id\n      };\n\n    case ADD_CHARACTER:\n      let charactersArray = state.characters;\n      charactersArray.push({\n        id: `sprite${state.characters.length}`,\n        angle: 0\n      });\n      return { ...state,\n        characters: charactersArray\n      };\n\n    case SET_ANGLE:\n      let characters_Array = state.characters;\n      let curr_character = characters_Array.find(character => character.id === state.active);\n      const curr_character_index = characters_Array.findIndex(character => character.id === state.active);\n\n      if (curr_character_index > -1) {\n        curr_character.angle = action.angle;\n        characters_Array[curr_character_index] = curr_character;\n      }\n\n      return { ...state,\n        characters: characters_Array\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/pravesh/Desktop/Scratch/src/redux/character/characterReducer.js"],"names":["SET_ACTIVE_CHARACTER","ADD_CHARACTER","SET_ANGLE","initialState","characters","id","angle","active","characterReducer","state","action","type","charactersArray","push","length","characters_Array","curr_character","find","character","curr_character_index","findIndex"],"mappings":"AAAA,SAASA,oBAAT,EAA+BC,aAA/B,EAA8CC,SAA9C,QAA+D,eAA/D;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,CAAC;AAAEC,IAAAA,EAAE,EAAE,SAAN;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GAAD,CADO;AAEnBC,EAAAA,MAAM,EAAE;AAFW,CAArB;AAKA,OAAO,MAAMC,gBAAgB,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAChE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,oBAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELF,QAAAA,MAAM,EAAEG,MAAM,CAACL;AAFV,OAAP;;AAKF,SAAKJ,aAAL;AACE,UAAIW,eAAe,GAAGH,KAAK,CAACL,UAA5B;AACAQ,MAAAA,eAAe,CAACC,IAAhB,CAAqB;AACnBR,QAAAA,EAAE,EAAG,SAAQI,KAAK,CAACL,UAAN,CAAiBU,MAAO,EADlB;AAEnBR,QAAAA,KAAK,EAAE;AAFY,OAArB;AAKA,aAAO,EACL,GAAGG,KADE;AAELL,QAAAA,UAAU,EAAEQ;AAFP,OAAP;;AAKF,SAAKV,SAAL;AACE,UAAIa,gBAAgB,GAAGN,KAAK,CAACL,UAA7B;AACA,UAAIY,cAAc,GAAGD,gBAAgB,CAACE,IAAjB,CAClBC,SAAD,IAAeA,SAAS,CAACb,EAAV,KAAiBI,KAAK,CAACF,MADnB,CAArB;AAGA,YAAMY,oBAAoB,GAAGJ,gBAAgB,CAACK,SAAjB,CAC1BF,SAAD,IAAeA,SAAS,CAACb,EAAV,KAAiBI,KAAK,CAACF,MADX,CAA7B;;AAGA,UAAIY,oBAAoB,GAAG,CAAC,CAA5B,EAA+B;AAC7BH,QAAAA,cAAc,CAACV,KAAf,GAAuBI,MAAM,CAACJ,KAA9B;AACAS,QAAAA,gBAAgB,CAACI,oBAAD,CAAhB,GAAyCH,cAAzC;AACD;;AACD,aAAO,EACL,GAAGP,KADE;AAELL,QAAAA,UAAU,EAAEW;AAFP,OAAP;;AAKF;AACE,aAAON,KAAP;AArCJ;AAuCD,CAxCM","sourcesContent":["import { SET_ACTIVE_CHARACTER, ADD_CHARACTER, SET_ANGLE } from \"./actionTypes\";\n\nconst initialState = {\n  characters: [{ id: \"sprite0\", angle: 0 }],\n  active: \"sprite0\",\n};\n\nexport const characterReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_CHARACTER:\n      return {\n        ...state,\n        active: action.id,\n      };\n\n    case ADD_CHARACTER:\n      let charactersArray = state.characters;\n      charactersArray.push({\n        id: `sprite${state.characters.length}`,\n        angle: 0,\n      });\n\n      return {\n        ...state,\n        characters: charactersArray,\n      };\n\n    case SET_ANGLE:\n      let characters_Array = state.characters;\n      let curr_character = characters_Array.find(\n        (character) => character.id === state.active\n      );\n      const curr_character_index = characters_Array.findIndex(\n        (character) => character.id === state.active\n      );\n      if (curr_character_index > -1) {\n        curr_character.angle = action.angle;\n        characters_Array[curr_character_index] = curr_character;\n      }\n      return {\n        ...state,\n        characters: characters_Array,\n      };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}