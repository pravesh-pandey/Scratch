{"ast":null,"code":"var _jsxFileName = \"/home/pravesh/Desktop/Scratch/src/components/control/Wait.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setWait } from \"../../redux/events/eventActions\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Wait = ({\n  events,\n  comp_id,\n  set_wait\n}) => {\n  _s();\n\n  const [wait, setStateWait] = useState(0); // Set Wait value for current component\n\n  function handleChange(e) {\n    let val = parseInt(e.target.value);\n    setStateWait(val);\n    let curr = events.wait;\n    curr[comp_id] = val;\n    set_wait(curr);\n  }\n\n  return (\n    /*#__PURE__*/\n    // Wait Component\n    _jsxDEV(Paper, {\n      elevation: 3,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" text-center rounded bg-red-400 p-2 my-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 my-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-white\",\n            children: \"Wait\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"mx-2 p-1 py-0 text-center\",\n            type: \"number\",\n            value: wait,\n            onChange: e => handleChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: comp_id,\n          className: \"text-center bg-red-600 text-white px-2 py-1 my-2 text-sm cursor-pointer\",\n          children: [\"Wait \", wait, \" seconds\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this)\n  );\n}; // map state to component\n\n\n_s(Wait, \"odm6KMafb1vJY0zrepVJvfGOaQI=\");\n\n_c = Wait;\n\nconst mapStateToProps = state => {\n  return {\n    events: state.event\n  };\n}; // map function to component\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    set_wait: value => dispatch(setWait(value))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wait);\n\nvar _c;\n\n$RefreshReg$(_c, \"Wait\");","map":{"version":3,"sources":["/home/pravesh/Desktop/Scratch/src/components/control/Wait.js"],"names":["React","useState","connect","setWait","Paper","Wait","events","comp_id","set_wait","wait","setStateWait","handleChange","e","val","parseInt","target","value","curr","mapStateToProps","state","event","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,iCAAxB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,OAAV;AAAmBC,EAAAA;AAAnB,CAAD,KAAmC;AAAA;;AAC9C,QAAM,CAACC,IAAD,EAAOC,YAAP,IAAuBT,QAAQ,CAAC,CAAD,CAArC,CAD8C,CAG9C;;AACA,WAASU,YAAT,CAAsBC,CAAtB,EAAyB;AACvB,QAAIC,GAAG,GAAGC,QAAQ,CAACF,CAAC,CAACG,MAAF,CAASC,KAAV,CAAlB;AACAN,IAAAA,YAAY,CAACG,GAAD,CAAZ;AACA,QAAII,IAAI,GAAGX,MAAM,CAACG,IAAlB;AACAQ,IAAAA,IAAI,CAACV,OAAD,CAAJ,GAAgBM,GAAhB;AACAL,IAAAA,QAAQ,CAACS,IAAD,CAAR;AACD;;AACD;AAAA;AACE;AACA,YAAC,KAAD;AAAO,MAAA,SAAS,EAAE,CAAlB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,0CAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,SAAS,EAAC,2BADZ;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,KAAK,EAAER,IAHT;AAIE,YAAA,QAAQ,EAAGG,CAAD,IAAOD,YAAY,CAACC,CAAD;AAJ/B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AACE,UAAA,EAAE,EAAEL,OADN;AAEE,UAAA,SAAS,EAAC,yEAFZ;AAAA,8BAIQE,IAJR;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAsBD,CAjCD,C,CAmCA;;;GAnCMJ,I;;KAAAA,I;;AAoCN,MAAMa,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLb,IAAAA,MAAM,EAAEa,KAAK,CAACC;AADT,GAAP;AAGD,CAJD,C,CAMA;;;AACA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLd,IAAAA,QAAQ,EAAGQ,KAAD,IAAWM,QAAQ,CAACnB,OAAO,CAACa,KAAD,CAAR;AADxB,GAAP;AAGD,CAJD;;AAMA,eAAed,OAAO,CAACgB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ChB,IAA7C,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setWait } from \"../../redux/events/eventActions\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst Wait = ({ events, comp_id, set_wait }) => {\n  const [wait, setStateWait] = useState(0);\n\n  // Set Wait value for current component\n  function handleChange(e) {\n    let val = parseInt(e.target.value);\n    setStateWait(val);\n    let curr = events.wait;\n    curr[comp_id] = val;\n    set_wait(curr);\n  }\n  return (\n    // Wait Component\n    <Paper elevation={3}>\n      <div className=\" text-center rounded bg-red-400 p-2 my-3\">\n        <div className=\"grid grid-cols-2 my-2\">\n          <div className=\"text-white\">Wait</div>\n          <input\n            className=\"mx-2 p-1 py-0 text-center\"\n            type=\"number\"\n            value={wait}\n            onChange={(e) => handleChange(e)}\n          />\n        </div>\n        <div\n          id={comp_id}\n          className=\"text-center bg-red-600 text-white px-2 py-1 my-2 text-sm cursor-pointer\"\n        >\n          Wait {wait} seconds\n        </div>\n      </div>\n    </Paper>\n  );\n};\n\n// map state to component\nconst mapStateToProps = (state) => {\n  return {\n    events: state.event,\n  };\n};\n\n// map function to component\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    set_wait: (value) => dispatch(setWait(value)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wait);\n"]},"metadata":{},"sourceType":"module"}