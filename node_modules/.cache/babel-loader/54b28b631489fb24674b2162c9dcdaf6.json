{"ast":null,"code":"import { ADD_LIST, SET_LIST } from \"./types\";\nconst initialState = {\n  midAreaLists: [{\n    id: \"midAreaList-0\",\n    comps: [\"MOVE\"]\n  }]\n};\nexport const listReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_LIST:\n      let index = state.midAreaLists.findIndex(x => x.id === action.id);\n      let all_lists = state.midAreaLists;\n      let [item] = all_lists.splice(index, 1);\n      item.comps = action.list;\n      all_lists.splice(index, 0, item);\n      return {\n        midAreaLists: all_lists\n      };\n\n    case ADD_LIST:\n      let old_list = state.midAreaLists;\n      let new_list_add = {\n        id: `midAreaList-${state.midAreaLists.length}`,\n        comps: [\"MOVE\"]\n      };\n      old_list.push(new_list_add);\n      return {\n        midAreaLists: old_list\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/pravesh/Desktop/Scratch/src/redux/midarea/list.js"],"names":["ADD_LIST","SET_LIST","initialState","midAreaLists","id","comps","listReducer","state","action","type","index","findIndex","x","all_lists","item","splice","list","old_list","new_list_add","length","push"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,QAAnB,QAAmC,SAAnC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE,CACZ;AACEC,IAAAA,EAAE,EAAE,eADN;AAEEC,IAAAA,KAAK,EAAE,CAAC,MAAD;AAFT,GADY;AADK,CAArB;AASA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,QAAL;AACE,UAAIS,KAAK,GAAGH,KAAK,CAACJ,YAAN,CAAmBQ,SAAnB,CAA8BC,CAAD,IAAOA,CAAC,CAACR,EAAF,KAASI,MAAM,CAACJ,EAApD,CAAZ;AACA,UAAIS,SAAS,GAAGN,KAAK,CAACJ,YAAtB;AACA,UAAI,CAACW,IAAD,IAASD,SAAS,CAACE,MAAV,CAAiBL,KAAjB,EAAwB,CAAxB,CAAb;AACAI,MAAAA,IAAI,CAACT,KAAL,GAAaG,MAAM,CAACQ,IAApB;AACAH,MAAAA,SAAS,CAACE,MAAV,CAAiBL,KAAjB,EAAwB,CAAxB,EAA2BI,IAA3B;AAEA,aAAO;AACLX,QAAAA,YAAY,EAAEU;AADT,OAAP;;AAIF,SAAKb,QAAL;AACE,UAAIiB,QAAQ,GAAGV,KAAK,CAACJ,YAArB;AACA,UAAIe,YAAY,GAAG;AACjBd,QAAAA,EAAE,EAAG,eAAcG,KAAK,CAACJ,YAAN,CAAmBgB,MAAO,EAD5B;AAEjBd,QAAAA,KAAK,EAAE,CAAC,MAAD;AAFU,OAAnB;AAIAY,MAAAA,QAAQ,CAACG,IAAT,CAAcF,YAAd;AACA,aAAO;AACLf,QAAAA,YAAY,EAAEc;AADT,OAAP;;AAIF;AACE,aAAOV,KAAP;AAxBJ;AA0BD,CA3BM","sourcesContent":["import { ADD_LIST, SET_LIST } from \"./types\";\n\nconst initialState = {\n  midAreaLists: [\n    {\n      id: \"midAreaList-0\",\n      comps: [\"MOVE\"],\n    },\n  ],\n};\n\nexport const listReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_LIST:\n      let index = state.midAreaLists.findIndex((x) => x.id === action.id);\n      let all_lists = state.midAreaLists;\n      let [item] = all_lists.splice(index, 1);\n      item.comps = action.list;\n      all_lists.splice(index, 0, item);\n\n      return {\n        midAreaLists: all_lists,\n      };\n\n    case ADD_LIST:\n      let old_list = state.midAreaLists;\n      let new_list_add = {\n        id: `midAreaList-${state.midAreaLists.length}`,\n        comps: [\"MOVE\"],\n      };\n      old_list.push(new_list_add);\n      return {\n        midAreaLists: old_list,\n      };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}